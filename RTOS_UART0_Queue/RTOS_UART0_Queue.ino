#include "PAT_RTOS_UART0.h"  // Include the custom UART driver header file
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void task_application(void *arg) {
  char data[_RX0_BUF_SIZE];  // Buffer to store received data
  while (1) {
    if (xQueueReceive(dataQueue_uart0, &data, 1 / portTICK_RATE_MS) == pdTRUE) { // Check if data is received from the UART queue
      // If data is received, print it
      Serial.print("Received= ");
      Serial.println(data);
    }
    vTaskDelay(5000 / portTICK_PERIOD_MS);  // Delay before reading next data
  }    
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Setup function
void setup() {
  Serial.begin(115200);  // Initialize serial communication
  uart0_driver_init();   // Initialize the UART driver
  xTaskCreatePinnedToCore(task_application, "task application", 1024 * 4, NULL, configMAX_PRIORITIES - 2, NULL, 0); // Create the application task
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Loop function (not used)
void loop() {
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



